
AVRASM ver. 2.1.30  C:\cvavr\lcd\Debug\List\lcd.asm Fri Jun 30 16:46:44 2017

C:\cvavr\lcd\Debug\List\lcd.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\cvavr\lcd\Debug\List\lcd.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\cvavr\lcd\Debug\List\lcd.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\cvavr\lcd\Debug\List\lcd.asm(1091): warning: Register r6 already defined by the .DEF directive
C:\cvavr\lcd\Debug\List\lcd.asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _counter=R4
                 	.DEF _counter_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0045 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0000      	.DB  0x0,0x0
                 
                 _0x0:
000034 2069
000035 6d61
000036 6320
000037 756f      	.DB  0x69,0x20,0x61,0x6D,0x20,0x63,0x6F,0x75
000038 746e
000039 6e69
00003a 2067
00003b 6425      	.DB  0x6E,0x74,0x69,0x6E,0x67,0x20,0x25,0x64
C:\cvavr\lcd\Debug\List\lcd.asm(1136): warning: .cseg .db misalignment - padding zero byte
00003c 0000      	.DB  0x0
                 _0x2000003:
00003d c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003e 0002      	.DW  0x02
00003f 0004      	.DW  0x04
000040 0066      	.DW  __REG_VARS*2
                 
000041 0002      	.DW  0x02
000042 0174      	.DW  __base_y_G100
000043 007a      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000044 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000045 94f8      	CLI
000046 27ee      	CLR  R30
000047 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000048 e0f1      	LDI  R31,1
000049 bffb      	OUT  GICR,R31
00004a bfeb      	OUT  GICR,R30
00004b bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004c e08d      	LDI  R24,(14-2)+1
00004d e0a2      	LDI  R26,2
00004e 27bb      	CLR  R27
                 __CLEAR_REG:
00004f 93ed      	ST   X+,R30
000050 958a      	DEC  R24
000051 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000052 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000053 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000054 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000055 93ed      	ST   X+,R30
000056 9701      	SBIW R24,1
000057 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000058 e7ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000059 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005a 9185      	LPM  R24,Z+
00005b 9195      	LPM  R25,Z+
00005c 9700      	SBIW R24,0
00005d f061      	BREQ __GLOBAL_INI_END
00005e 91a5      	LPM  R26,Z+
00005f 91b5      	LPM  R27,Z+
000060 9005      	LPM  R0,Z+
000061 9015      	LPM  R1,Z+
000062 01bf      	MOVW R22,R30
000063 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000064 9005      	LPM  R0,Z+
000065 920d      	ST   X+,R0
000066 9701      	SBIW R24,1
000067 f7e1      	BRNE __GLOBAL_INI_LOOP
000068 01fb      	MOVW R30,R22
000069 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006a e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006b bfed      	OUT  SPL,R30
00006c e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006d bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006e e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006f e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000070 940c 0072 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ; char st[20];
                 ; int counter=0;
                 ;
                 ;void main(void)
                 ; 0000 0009 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000A DDRA=0;
000072 e0e0      	LDI  R30,LOW(0)
000073 bbea      	OUT  0x1A,R30
                 ; 0000 000B PORTA=0;
000074 bbeb      	OUT  0x1B,R30
                 ; 0000 000C lcd_init(20);
000075 e1a4      	LDI  R26,LOW(20)
000076 d07d      	RCALL _lcd_init
                 ; 0000 000D while (1)
                 _0x3:
                 ; 0000 000E       {
                 ; 0000 000F             sprintf(st,"i am counting %d",counter);
000077 e6e0      	LDI  R30,LOW(_st)
000078 e0f1      	LDI  R31,HIGH(_st)
000079 93fa      	ST   -Y,R31
00007a 93ea      	ST   -Y,R30
                +
00007b e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00007c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00007d 93fa      	ST   -Y,R31
00007e 93ea      	ST   -Y,R30
00007f 01f2      	MOVW R30,R4
000080 940e 032d 	CALL __CWD1
000082 940e 033a 	CALL __PUTPARD1
000084 e084      	LDI  R24,4
000085 940e 0295 	CALL _sprintf
000087 9628      	ADIW R28,8
                 ; 0000 0010             lcd_puts(st);
000088 e6a0      	LDI  R26,LOW(_st)
000089 e0b1      	LDI  R27,HIGH(_st)
00008a d058      	RCALL _lcd_puts
                 ; 0000 0011             delay_ms(300);
00008b e2ac      	LDI  R26,LOW(300)
00008c e0b1      	LDI  R27,HIGH(300)
00008d 940e 031b 	CALL _delay_ms
                 ; 0000 0012             lcd_clear();
00008f d032      	RCALL _lcd_clear
                 ; 0000 0013             counter++;
000090 01f2      	MOVW R30,R4
000091 9631      	ADIW R30,1
000092 012f      	MOVW R4,R30
                 ; 0000 0014       }
000093 cfe3      	RJMP _0x3
                 ; 0000 0015 }
                 _0x6:
000094 cfff      	RJMP _0x6
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000095 93aa      	ST   -Y,R26
000096 b3eb      	IN   R30,0x1B
000097 70ef      	ANDI R30,LOW(0xF)
000098 2fae      	MOV  R26,R30
000099 81e8      	LD   R30,Y
00009a 7fe0      	ANDI R30,LOW(0xF0)
00009b 2bea      	OR   R30,R26
00009c bbeb      	OUT  0x1B,R30
                +
00009d e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00009e 958a     +DEC R24
00009f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000a0 9ada      	SBI  0x1B,2
                +
0000a1 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000a2 958a     +DEC R24
0000a3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000a4 98da      	CBI  0x1B,2
                +
0000a5 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000a6 958a     +DEC R24
0000a7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000a8 c076      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000a9 93aa      	ST   -Y,R26
0000aa 81a8      	LD   R26,Y
0000ab dfe9      	RCALL __lcd_write_nibble_G100
0000ac 81e8          ld    r30,y
0000ad 95e2          swap  r30
0000ae 83e8          st    y,r30
0000af 81a8      	LD   R26,Y
0000b0 dfe4      	RCALL __lcd_write_nibble_G100
                +
0000b1 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0000b2 958a     +DEC R24
0000b3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0000b4 c06a      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000b5 93aa      	ST   -Y,R26
0000b6 81e8      	LD   R30,Y
0000b7 e0f0      	LDI  R31,0
0000b8 58ec      	SUBI R30,LOW(-__base_y_G100)
0000b9 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0000ba 81e0      	LD   R30,Z
0000bb 81a9      	LDD  R26,Y+1
0000bc 0fae      	ADD  R26,R30
0000bd dfeb      	RCALL __lcd_write_data
0000be 8079      	LDD  R7,Y+1
0000bf 8068      	LDD  R6,Y+0
0000c0 9622      	ADIW R28,2
0000c1 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000c2 e0a2      	LDI  R26,LOW(2)
0000c3 940e 02e2 	CALL SUBOPT_0x0
0000c5 e0ac      	LDI  R26,LOW(12)
0000c6 dfe2      	RCALL __lcd_write_data
0000c7 e0a1      	LDI  R26,LOW(1)
0000c8 940e 02e2 	CALL SUBOPT_0x0
0000ca e0e0      	LDI  R30,LOW(0)
0000cb 2e6e      	MOV  R6,R30
0000cc 2e7e      	MOV  R7,R30
0000cd 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000ce 93aa      	ST   -Y,R26
0000cf 81a8      	LD   R26,Y
0000d0 30aa      	CPI  R26,LOW(0xA)
0000d1 f011      	BREQ _0x2000005
0000d2 1479      	CP   R7,R9
0000d3 f048      	BRLO _0x2000004
                 _0x2000005:
0000d4 e0e0      	LDI  R30,LOW(0)
0000d5 93ea      	ST   -Y,R30
0000d6 9463      	INC  R6
0000d7 2da6      	MOV  R26,R6
0000d8 dfdc      	RCALL _lcd_gotoxy
0000d9 81a8      	LD   R26,Y
0000da 30aa      	CPI  R26,LOW(0xA)
0000db f409      	BRNE _0x2000007
0000dc c042      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
0000dd 9473      	INC  R7
0000de 9ad8      	SBI  0x1B,0
0000df 81a8      	LD   R26,Y
0000e0 dfc8      	RCALL __lcd_write_data
0000e1 98d8      	CBI  0x1B,0
0000e2 c03c      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0000e3 93ba      	ST   -Y,R27
0000e4 93aa      	ST   -Y,R26
0000e5 931a      	ST   -Y,R17
                 _0x2000008:
0000e6 81a9      	LDD  R26,Y+1
0000e7 81ba      	LDD  R27,Y+1+1
0000e8 91ed      	LD   R30,X+
0000e9 83a9      	STD  Y+1,R26
0000ea 83ba      	STD  Y+1+1,R27
0000eb 2f1e      	MOV  R17,R30
0000ec 30e0      	CPI  R30,0
0000ed f019      	BREQ _0x200000A
0000ee 2fa1      	MOV  R26,R17
0000ef dfde      	RCALL _lcd_putchar
0000f0 cff5      	RJMP _0x2000008
                 _0x200000A:
0000f1 8118      	LDD  R17,Y+0
0000f2 9623      	ADIW R28,3
0000f3 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0000f4 93aa      	ST   -Y,R26
0000f5 b3ea      	IN   R30,0x1A
0000f6 6fe0      	ORI  R30,LOW(0xF0)
0000f7 bbea      	OUT  0x1A,R30
0000f8 9ad2      	SBI  0x1A,2
0000f9 9ad0      	SBI  0x1A,0
0000fa 9ad1      	SBI  0x1A,1
0000fb 98da      	CBI  0x1B,2
0000fc 98d8      	CBI  0x1B,0
0000fd 98d9      	CBI  0x1B,1
0000fe 8098      	LDD  R9,Y+0
0000ff 81e8      	LD   R30,Y
000100 58e0      	SUBI R30,-LOW(128)
                +
000101 93e0 0176+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000103 81e8      	LD   R30,Y
000104 54e0      	SUBI R30,-LOW(192)
                +
000105 93e0 0177+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000107 e1a4      	LDI  R26,LOW(20)
000108 e0b0      	LDI  R27,0
000109 940e 031b 	CALL _delay_ms
00010b 940e 02e8 	CALL SUBOPT_0x1
00010d 940e 02e8 	CALL SUBOPT_0x1
00010f 940e 02e8 	CALL SUBOPT_0x1
000111 e2a0      	LDI  R26,LOW(32)
000112 df82      	RCALL __lcd_write_nibble_G100
                +
000113 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000114 958a     +DEC R24
000115 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000116 e2a8      	LDI  R26,LOW(40)
000117 df91      	RCALL __lcd_write_data
000118 e0a4      	LDI  R26,LOW(4)
000119 df8f      	RCALL __lcd_write_data
00011a e8a5      	LDI  R26,LOW(133)
00011b df8d      	RCALL __lcd_write_data
00011c e0a6      	LDI  R26,LOW(6)
00011d df8b      	RCALL __lcd_write_data
00011e dfa3      	RCALL _lcd_clear
                 _0x2080002:
00011f 9621      	ADIW R28,1
000120 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000121 93ba      	ST   -Y,R27
000122 93aa      	ST   -Y,R26
000123 931a      	ST   -Y,R17
000124 930a      	ST   -Y,R16
000125 81aa      	LDD  R26,Y+2
000126 81bb      	LDD  R27,Y+2+1
000127 9612      	ADIW R26,2
000128 940e 0332 	CALL __GETW1P
00012a 9730      	SBIW R30,0
00012b f159      	BREQ _0x2020010
00012c 81aa      	LDD  R26,Y+2
00012d 81bb      	LDD  R27,Y+2+1
00012e 9614      	ADIW R26,4
00012f 940e 0332 	CALL __GETW1P
000131 018f      	MOVW R16,R30
000132 9730      	SBIW R30,0
000133 f061      	BREQ _0x2020012
                +
000134 3002     +CPI R16 , LOW ( 2 )
000135 e0e0     +LDI R30 , HIGH ( 2 )
000136 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000137 f098      	BRLO _0x2020013
000138 01f8      	MOVW R30,R16
000139 9731      	SBIW R30,1
00013a 018f      	MOVW R16,R30
                +
00013b 81aa     +LDD R26 , Y + 2
00013c 81bb     +LDD R27 , Y + 2 + 1
00013d 9614     +ADIW R26 , 4
00013e 93ed     +ST X + , R30
00013f 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000140 81aa      	LDD  R26,Y+2
000141 81bb      	LDD  R27,Y+2+1
000142 9612      	ADIW R26,2
000143 91ed      	LD   R30,X+
000144 91fd      	LD   R31,X+
000145 9631      	ADIW R30,1
000146 93fe      	ST   -X,R31
000147 93ee      	ST   -X,R30
000148 9731      	SBIW R30,1
000149 81ac      	LDD  R26,Y+4
00014a 83a0      	STD  Z+0,R26
                 _0x2020013:
00014b 81aa      	LDD  R26,Y+2
00014c 81bb      	LDD  R27,Y+2+1
00014d 940e 0332 	CALL __GETW1P
00014f 23ff      	TST  R31
000150 f02a      	BRMI _0x2020014
000151 91ed      	LD   R30,X+
000152 91fd      	LD   R31,X+
000153 9631      	ADIW R30,1
000154 93fe      	ST   -X,R31
000155 93ee      	ST   -X,R30
                 _0x2020014:
000156 c006      	RJMP _0x2020015
                 _0x2020010:
000157 81aa      	LDD  R26,Y+2
000158 81bb      	LDD  R27,Y+2+1
000159 efef      	LDI  R30,LOW(65535)
00015a efff      	LDI  R31,HIGH(65535)
00015b 93ed      	ST   X+,R30
00015c 93fc      	ST   X,R31
                 _0x2020015:
00015d 8119      	LDD  R17,Y+1
00015e 8108      	LDD  R16,Y+0
00015f 9625      	ADIW R28,5
000160 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000161 93ba      	ST   -Y,R27
000162 93aa      	ST   -Y,R26
000163 9726      	SBIW R28,6
000164 940e 033f 	CALL __SAVELOCR6
000166 e010      	LDI  R17,0
000167 85ac      	LDD  R26,Y+12
000168 85bd      	LDD  R27,Y+12+1
000169 e0e0      	LDI  R30,LOW(0)
00016a e0f0      	LDI  R31,HIGH(0)
00016b 93ed      	ST   X+,R30
00016c 93fc      	ST   X,R31
                 _0x2020016:
00016d 89ea      	LDD  R30,Y+18
00016e 89fb      	LDD  R31,Y+18+1
00016f 9631      	ADIW R30,1
000170 8bea      	STD  Y+18,R30
000171 8bfb      	STD  Y+18+1,R31
000172 9731      	SBIW R30,1
000173 91e4      	LPM  R30,Z
000174 2f2e      	MOV  R18,R30
000175 30e0      	CPI  R30,0
000176 f409      	BRNE PC+2
000177 c115      	RJMP _0x2020018
000178 2fe1      	MOV  R30,R17
000179 30e0      	CPI  R30,0
00017a f439      	BRNE _0x202001C
00017b 3225      	CPI  R18,37
00017c f411      	BRNE _0x202001D
00017d e011      	LDI  R17,LOW(1)
00017e c002      	RJMP _0x202001E
                 _0x202001D:
00017f 940e 02ef 	CALL SUBOPT_0x2
                 _0x202001E:
000181 c10a      	RJMP _0x202001B
                 _0x202001C:
000182 30e1      	CPI  R30,LOW(0x1)
000183 f4a9      	BRNE _0x202001F
000184 3225      	CPI  R18,37
000185 f419      	BRNE _0x2020020
000186 940e 02ef 	CALL SUBOPT_0x2
000188 c102      	RJMP _0x20200CC
                 _0x2020020:
000189 e012      	LDI  R17,LOW(2)
00018a e040      	LDI  R20,LOW(0)
00018b e000      	LDI  R16,LOW(0)
00018c 322d      	CPI  R18,45
00018d f411      	BRNE _0x2020021
00018e e001      	LDI  R16,LOW(1)
00018f c0fc      	RJMP _0x202001B
                 _0x2020021:
000190 322b      	CPI  R18,43
000191 f411      	BRNE _0x2020022
000192 e24b      	LDI  R20,LOW(43)
000193 c0f8      	RJMP _0x202001B
                 _0x2020022:
000194 3220      	CPI  R18,32
000195 f411      	BRNE _0x2020023
000196 e240      	LDI  R20,LOW(32)
000197 c0f4      	RJMP _0x202001B
                 _0x2020023:
000198 c002      	RJMP _0x2020024
                 _0x202001F:
000199 30e2      	CPI  R30,LOW(0x2)
00019a f439      	BRNE _0x2020025
                 _0x2020024:
00019b e050      	LDI  R21,LOW(0)
00019c e013      	LDI  R17,LOW(3)
00019d 3320      	CPI  R18,48
00019e f411      	BRNE _0x2020026
00019f 6800      	ORI  R16,LOW(128)
0001a0 c0eb      	RJMP _0x202001B
                 _0x2020026:
0001a1 c003      	RJMP _0x2020027
                 _0x2020025:
0001a2 30e3      	CPI  R30,LOW(0x3)
0001a3 f009      	BREQ PC+2
0001a4 c0e7      	RJMP _0x202001B
                 _0x2020027:
0001a5 3320      	CPI  R18,48
0001a6 f010      	BRLO _0x202002A
0001a7 332a      	CPI  R18,58
0001a8 f008      	BRLO _0x202002B
                 _0x202002A:
0001a9 c007      	RJMP _0x2020029
                 _0x202002B:
0001aa e0aa      	LDI  R26,LOW(10)
0001ab 9f5a      	MUL  R21,R26
0001ac 2d50      	MOV  R21,R0
0001ad 2fe2      	MOV  R30,R18
0001ae 53e0      	SUBI R30,LOW(48)
0001af 0f5e      	ADD  R21,R30
0001b0 c0db      	RJMP _0x202001B
                 _0x2020029:
0001b1 2fe2      	MOV  R30,R18
0001b2 36e3      	CPI  R30,LOW(0x63)
0001b3 f449      	BRNE _0x202002F
0001b4 940e 02f6 	CALL SUBOPT_0x3
0001b6 89e8      	LDD  R30,Y+16
0001b7 89f9      	LDD  R31,Y+16+1
0001b8 81a4      	LDD  R26,Z+4
0001b9 93aa      	ST   -Y,R26
0001ba 940e 02fc 	CALL SUBOPT_0x4
0001bc c0ce      	RJMP _0x2020030
                 _0x202002F:
0001bd 37e3      	CPI  R30,LOW(0x73)
0001be f441      	BRNE _0x2020032
0001bf 940e 02f6 	CALL SUBOPT_0x3
0001c1 940e 0302 	CALL SUBOPT_0x5
0001c3 940e 02c9 	CALL _strlen
0001c5 2f1e      	MOV  R17,R30
0001c6 c00a      	RJMP _0x2020033
                 _0x2020032:
0001c7 37e0      	CPI  R30,LOW(0x70)
0001c8 f461      	BRNE _0x2020035
0001c9 940e 02f6 	CALL SUBOPT_0x3
0001cb 940e 0302 	CALL SUBOPT_0x5
0001cd 940e 02d5 	CALL _strlenf
0001cf 2f1e      	MOV  R17,R30
0001d0 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001d1 6002      	ORI  R16,LOW(2)
0001d2 770f      	ANDI R16,LOW(127)
0001d3 e030      	LDI  R19,LOW(0)
0001d4 c034      	RJMP _0x2020036
                 _0x2020035:
0001d5 36e4      	CPI  R30,LOW(0x64)
0001d6 f011      	BREQ _0x2020039
0001d7 36e9      	CPI  R30,LOW(0x69)
0001d8 f411      	BRNE _0x202003A
                 _0x2020039:
0001d9 6004      	ORI  R16,LOW(4)
0001da c002      	RJMP _0x202003B
                 _0x202003A:
0001db 37e5      	CPI  R30,LOW(0x75)
0001dc f431      	BRNE _0x202003C
                 _0x202003B:
0001dd e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0001de e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0001df 83ee      	STD  Y+6,R30
0001e0 83ff      	STD  Y+6+1,R31
0001e1 e015      	LDI  R17,LOW(5)
0001e2 c00c      	RJMP _0x202003D
                 _0x202003C:
0001e3 35e8      	CPI  R30,LOW(0x58)
0001e4 f411      	BRNE _0x202003F
0001e5 6008      	ORI  R16,LOW(8)
0001e6 c003      	RJMP _0x2020040
                 _0x202003F:
0001e7 37e8      	CPI  R30,LOW(0x78)
0001e8 f009      	BREQ PC+2
0001e9 c0a1      	RJMP _0x2020071
                 _0x2020040:
0001ea e5ee      	LDI  R30,LOW(_tbl16_G101*2)
0001eb e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0001ec 83ee      	STD  Y+6,R30
0001ed 83ff      	STD  Y+6+1,R31
0001ee e014      	LDI  R17,LOW(4)
                 _0x202003D:
0001ef ff02      	SBRS R16,2
0001f0 c014      	RJMP _0x2020042
0001f1 940e 02f6 	CALL SUBOPT_0x3
0001f3 940e 030c 	CALL SUBOPT_0x6
0001f5 85ab      	LDD  R26,Y+11
0001f6 23aa      	TST  R26
0001f7 f43a      	BRPL _0x2020043
0001f8 85ea      	LDD  R30,Y+10
0001f9 85fb      	LDD  R31,Y+10+1
0001fa 940e 0329 	CALL __ANEGW1
0001fc 87ea      	STD  Y+10,R30
0001fd 87fb      	STD  Y+10+1,R31
0001fe e24d      	LDI  R20,LOW(45)
                 _0x2020043:
0001ff 3040      	CPI  R20,0
000200 f011      	BREQ _0x2020044
000201 5f1f      	SUBI R17,-LOW(1)
000202 c001      	RJMP _0x2020045
                 _0x2020044:
000203 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000204 c004      	RJMP _0x2020046
                 _0x2020042:
000205 940e 02f6 	CALL SUBOPT_0x3
000207 940e 030c 	CALL SUBOPT_0x6
                 _0x2020046:
                 _0x2020036:
000209 fd00      	SBRC R16,0
00020a c011      	RJMP _0x2020047
                 _0x2020048:
00020b 1715      	CP   R17,R21
00020c f478      	BRSH _0x202004A
00020d ff07      	SBRS R16,7
00020e c008      	RJMP _0x202004B
00020f ff02      	SBRS R16,2
000210 c004      	RJMP _0x202004C
000211 7f0b      	ANDI R16,LOW(251)
000212 2f24      	MOV  R18,R20
000213 5011      	SUBI R17,LOW(1)
000214 c001      	RJMP _0x202004D
                 _0x202004C:
000215 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000216 c001      	RJMP _0x202004E
                 _0x202004B:
000217 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000218 940e 02ef 	CALL SUBOPT_0x2
00021a 5051      	SUBI R21,LOW(1)
00021b cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
00021c 2f31      	MOV  R19,R17
00021d ff01      	SBRS R16,1
00021e c017      	RJMP _0x202004F
                 _0x2020050:
00021f 3030      	CPI  R19,0
000220 f0a1      	BREQ _0x2020052
000221 ff03      	SBRS R16,3
000222 c006      	RJMP _0x2020053
000223 81ee      	LDD  R30,Y+6
000224 81ff      	LDD  R31,Y+6+1
000225 9125      	LPM  R18,Z+
000226 83ee      	STD  Y+6,R30
000227 83ff      	STD  Y+6+1,R31
000228 c005      	RJMP _0x2020054
                 _0x2020053:
000229 81ae      	LDD  R26,Y+6
00022a 81bf      	LDD  R27,Y+6+1
00022b 912d      	LD   R18,X+
00022c 83ae      	STD  Y+6,R26
00022d 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00022e 940e 02ef 	CALL SUBOPT_0x2
000230 3050      	CPI  R21,0
000231 f009      	BREQ _0x2020055
000232 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000233 5031      	SUBI R19,LOW(1)
000234 cfea      	RJMP _0x2020050
                 _0x2020052:
000235 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000236 e320      	LDI  R18,LOW(48)
000237 81ee      	LDD  R30,Y+6
000238 81ff      	LDD  R31,Y+6+1
000239 940e 0336 	CALL __GETW1PF
00023b 87e8      	STD  Y+8,R30
00023c 87f9      	STD  Y+8+1,R31
00023d 81ee      	LDD  R30,Y+6
00023e 81ff      	LDD  R31,Y+6+1
00023f 9632      	ADIW R30,2
000240 83ee      	STD  Y+6,R30
000241 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000242 85e8      	LDD  R30,Y+8
000243 85f9      	LDD  R31,Y+8+1
000244 85aa      	LDD  R26,Y+10
000245 85bb      	LDD  R27,Y+10+1
000246 17ae      	CP   R26,R30
000247 07bf      	CPC  R27,R31
000248 f050      	BRLO _0x202005C
000249 5f2f      	SUBI R18,-LOW(1)
00024a 85a8      	LDD  R26,Y+8
00024b 85b9      	LDD  R27,Y+8+1
00024c 85ea      	LDD  R30,Y+10
00024d 85fb      	LDD  R31,Y+10+1
00024e 1bea      	SUB  R30,R26
00024f 0bfb      	SBC  R31,R27
000250 87ea      	STD  Y+10,R30
000251 87fb      	STD  Y+10+1,R31
000252 cfef      	RJMP _0x202005A
                 _0x202005C:
000253 332a      	CPI  R18,58
000254 f028      	BRLO _0x202005D
000255 ff03      	SBRS R16,3
000256 c002      	RJMP _0x202005E
000257 5f29      	SUBI R18,-LOW(7)
000258 c001      	RJMP _0x202005F
                 _0x202005E:
000259 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
00025a fd04      	SBRC R16,4
00025b c01a      	RJMP _0x2020061
00025c 3321      	CPI  R18,49
00025d f420      	BRSH _0x2020063
00025e 85a8      	LDD  R26,Y+8
00025f 85b9      	LDD  R27,Y+8+1
000260 9711      	SBIW R26,1
000261 f409      	BRNE _0x2020062
                 _0x2020063:
000262 c009      	RJMP _0x20200CD
                 _0x2020062:
000263 1753      	CP   R21,R19
000264 f010      	BRLO _0x2020067
000265 ff00      	SBRS R16,0
000266 c001      	RJMP _0x2020068
                 _0x2020067:
000267 c013      	RJMP _0x2020066
                 _0x2020068:
000268 e220      	LDI  R18,LOW(32)
000269 ff07      	SBRS R16,7
00026a c00b      	RJMP _0x2020069
00026b e320      	LDI  R18,LOW(48)
                 _0x20200CD:
00026c 6100      	ORI  R16,LOW(16)
00026d ff02      	SBRS R16,2
00026e c007      	RJMP _0x202006A
00026f 7f0b      	ANDI R16,LOW(251)
000270 934a      	ST   -Y,R20
000271 940e 02fc 	CALL SUBOPT_0x4
000273 3050      	CPI  R21,0
000274 f009      	BREQ _0x202006B
000275 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000276 940e 02ef 	CALL SUBOPT_0x2
000278 3050      	CPI  R21,0
000279 f009      	BREQ _0x202006C
00027a 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
00027b 5031      	SUBI R19,LOW(1)
00027c 85a8      	LDD  R26,Y+8
00027d 85b9      	LDD  R27,Y+8+1
00027e 9712      	SBIW R26,2
00027f f008      	BRLO _0x2020059
000280 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000281 ff00      	SBRS R16,0
000282 c008      	RJMP _0x202006D
                 _0x202006E:
000283 3050      	CPI  R21,0
000284 f031      	BREQ _0x2020070
000285 5051      	SUBI R21,LOW(1)
000286 e2e0      	LDI  R30,LOW(32)
000287 93ea      	ST   -Y,R30
000288 940e 02fc 	CALL SUBOPT_0x4
00028a cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
00028b e010      	LDI  R17,LOW(0)
                 _0x202001B:
00028c cee0      	RJMP _0x2020016
                 _0x2020018:
00028d 85ac      	LDD  R26,Y+12
00028e 85bd      	LDD  R27,Y+12+1
00028f 940e 0332 	CALL __GETW1P
000291 940e 0346 	CALL __LOADLOCR6
000293 9664      	ADIW R28,20
000294 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000295 92ff      	PUSH R15
000296 2ef8      	MOV  R15,R24
000297 9726      	SBIW R28,6
000298 940e 0341 	CALL __SAVELOCR4
00029a 940e 0314 	CALL SUBOPT_0x7
00029c 9730      	SBIW R30,0
00029d f419      	BRNE _0x2020072
00029e efef      	LDI  R30,LOW(65535)
00029f efff      	LDI  R31,HIGH(65535)
0002a0 c023      	RJMP _0x2080001
                 _0x2020072:
0002a1 01de      	MOVW R26,R28
0002a2 9616      	ADIW R26,6
0002a3 940e 0325 	CALL __ADDW2R15
0002a5 018d      	MOVW R16,R26
0002a6 940e 0314 	CALL SUBOPT_0x7
0002a8 83ee      	STD  Y+6,R30
0002a9 83ff      	STD  Y+6+1,R31
0002aa e0e0      	LDI  R30,LOW(0)
0002ab 87e8      	STD  Y+8,R30
0002ac 87e9      	STD  Y+8+1,R30
0002ad 01de      	MOVW R26,R28
0002ae 961a      	ADIW R26,10
0002af 940e 0325 	CALL __ADDW2R15
0002b1 940e 0332 	CALL __GETW1P
0002b3 93fa      	ST   -Y,R31
0002b4 93ea      	ST   -Y,R30
0002b5 931a      	ST   -Y,R17
0002b6 930a      	ST   -Y,R16
0002b7 e2e1      	LDI  R30,LOW(_put_buff_G101)
0002b8 e0f1      	LDI  R31,HIGH(_put_buff_G101)
0002b9 93fa      	ST   -Y,R31
0002ba 93ea      	ST   -Y,R30
0002bb 01de      	MOVW R26,R28
0002bc 961a      	ADIW R26,10
0002bd dea3      	RCALL __print_G101
0002be 019f      	MOVW R18,R30
0002bf 81ae      	LDD  R26,Y+6
0002c0 81bf      	LDD  R27,Y+6+1
0002c1 e0e0      	LDI  R30,LOW(0)
0002c2 93ec      	ST   X,R30
0002c3 01f9      	MOVW R30,R18
                 _0x2080001:
0002c4 940e 0348 	CALL __LOADLOCR4
0002c6 962a      	ADIW R28,10
0002c7 90ff      	POP  R15
0002c8 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002c9 93ba      	ST   -Y,R27
0002ca 93aa      	ST   -Y,R26
0002cb 91a9          ld   r26,y+
0002cc 91b9          ld   r27,y+
0002cd 27ee          clr  r30
0002ce 27ff          clr  r31
                 strlen0:
0002cf 916d          ld   r22,x+
0002d0 2366          tst  r22
0002d1 f011          breq strlen1
0002d2 9631          adiw r30,1
0002d3 cffb          rjmp strlen0
                 strlen1:
0002d4 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002d5 93ba      	ST   -Y,R27
0002d6 93aa      	ST   -Y,R26
0002d7 27aa          clr  r26
0002d8 27bb          clr  r27
0002d9 91e9          ld   r30,y+
0002da 91f9          ld   r31,y+
                 strlenf0:
0002db 9005      	lpm  r0,z+
0002dc 2000          tst  r0
0002dd f011          breq strlenf1
0002de 9611          adiw r26,1
0002df cffb          rjmp strlenf0
                 strlenf1:
0002e0 01fd          movw r30,r26
0002e1 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _st:
000160           	.BYTE 0x14
                 __base_y_G100:
000174           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0002e2 940e 00a9 	CALL __lcd_write_data
0002e4 e0a3      	LDI  R26,LOW(3)
0002e5 e0b0      	LDI  R27,0
0002e6 940c 031b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
0002e8 e3a0      	LDI  R26,LOW(48)
0002e9 940e 0095 	CALL __lcd_write_nibble_G100
                +
0002eb e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0002ec 958a     +DEC R24
0002ed f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0002ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
0002ef 932a      	ST   -Y,R18
0002f0 85ad      	LDD  R26,Y+13
0002f1 85be      	LDD  R27,Y+13+1
0002f2 85ef      	LDD  R30,Y+15
0002f3 89f8      	LDD  R31,Y+15+1
0002f4 9509      	ICALL
0002f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
0002f6 89e8      	LDD  R30,Y+16
0002f7 89f9      	LDD  R31,Y+16+1
0002f8 9734      	SBIW R30,4
0002f9 8be8      	STD  Y+16,R30
0002fa 8bf9      	STD  Y+16+1,R31
0002fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
0002fc 85ad      	LDD  R26,Y+13
0002fd 85be      	LDD  R27,Y+13+1
0002fe 85ef      	LDD  R30,Y+15
0002ff 89f8      	LDD  R31,Y+15+1
000300 9509      	ICALL
000301 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000302 89a8      	LDD  R26,Y+16
000303 89b9      	LDD  R27,Y+16+1
000304 9614      	ADIW R26,4
000305 940e 0332 	CALL __GETW1P
000307 83ee      	STD  Y+6,R30
000308 83ff      	STD  Y+6+1,R31
000309 81ae      	LDD  R26,Y+6
00030a 81bf      	LDD  R27,Y+6+1
00030b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
00030c 89a8      	LDD  R26,Y+16
00030d 89b9      	LDD  R27,Y+16+1
00030e 9614      	ADIW R26,4
00030f 940e 0332 	CALL __GETW1P
000311 87ea      	STD  Y+10,R30
000312 87fb      	STD  Y+10+1,R31
000313 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000314 01de      	MOVW R26,R28
000315 961c      	ADIW R26,12
000316 940e 0325 	CALL __ADDW2R15
000318 940e 0332 	CALL __GETW1P
00031a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00031b 9610      	adiw r26,0
00031c f039      	breq __delay_ms1
                 __delay_ms0:
                +
00031d ef8a     +LDI R24 , LOW ( 0xFA )
00031e e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00031f 9701     +SBIW R24 , 1
000320 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000321 95a8      	wdr
000322 9711      	sbiw r26,1
000323 f7c9      	brne __delay_ms0
                 __delay_ms1:
000324 9508      	ret
                 
                 __ADDW2R15:
000325 2400      	CLR  R0
000326 0daf      	ADD  R26,R15
000327 1db0      	ADC  R27,R0
000328 9508      	RET
                 
                 __ANEGW1:
000329 95f1      	NEG  R31
00032a 95e1      	NEG  R30
00032b 40f0      	SBCI R31,0
00032c 9508      	RET
                 
                 __CWD1:
00032d 2f6f      	MOV  R22,R31
00032e 0f66      	ADD  R22,R22
00032f 0b66      	SBC  R22,R22
000330 2f76      	MOV  R23,R22
000331 9508      	RET
                 
                 __GETW1P:
000332 91ed      	LD   R30,X+
000333 91fc      	LD   R31,X
000334 9711      	SBIW R26,1
000335 9508      	RET
                 
                 __GETW1PF:
000336 9005      	LPM  R0,Z+
000337 91f4      	LPM  R31,Z
000338 2de0      	MOV  R30,R0
000339 9508      	RET
                 
                 __PUTPARD1:
00033a 937a      	ST   -Y,R23
00033b 936a      	ST   -Y,R22
00033c 93fa      	ST   -Y,R31
00033d 93ea      	ST   -Y,R30
00033e 9508      	RET
                 
                 __SAVELOCR6:
00033f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000340 934a      	ST   -Y,R20
                 __SAVELOCR4:
000341 933a      	ST   -Y,R19
                 __SAVELOCR3:
000342 932a      	ST   -Y,R18
                 __SAVELOCR2:
000343 931a      	ST   -Y,R17
000344 930a      	ST   -Y,R16
000345 9508      	RET
                 
                 __LOADLOCR6:
000346 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000347 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000348 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000349 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00034a 8119      	LDD  R17,Y+1
00034b 8108      	LD   R16,Y
00034c 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   3 r5 :   0 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:  11 r23:   2 
r24:  23 r25:   3 r26:  97 r27:  38 r28:  14 r29:   1 r30: 151 r31:  58 
x  :  23 y  : 165 z  :  15 
Registers used: 26 out of 35 (74.3%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  25 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  50 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  33 cpse  :   0 dec   :   7 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  23 ld    :  25 ldd   :  77 ldi   :  84 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  19 movw  :  17 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  10 pop   :   1 push  :   1 rcall :  17 ret   :  25 
reti  :   0 rjmp  :  59 rol   :   0 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  17 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  58 std   :  31 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 52 out of 116 (44.8%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00069a   1636     54   1690   16384  10.3%
[.dseg] 0x000060 0x000178      0     24     24    1024   2.3%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 6 warnings
